-- Made by ogsunny :3
-- Please do not redistribute or use without permission.
-- Special thanks to the community for their support.

-- Load Material UI Library
local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Zewth/Material-UI/master/Source.lua"))()

-- Initialize the Window
local Window = Material.Load({
    Title = "Ogsunny Hub V1.2.3 (BETA)",
    Style = 1,
    SizeX = 500,
    SizeY = 300,
    Theme = "Dark"
})

-- Create Tabs
local MainTab = Window.New({ Title = "Main" })
local TeleportsTab = Window.New({ Title = "Teleports" })
local LocalPlayerTab = Window.New({ Title = "LocalPlayer" })
local SettingsTab = Window.New({ Title = "Settings" })

-- Tables
local teleportSpots = {}
local racistPeople = {}
local itemSpots = {
    Bait_Crate = CFrame.new(384.57513427734375, 135.3519287109375, 337.5340270996094),
    Carbon_Rod = CFrame.new(454.083618, 150.590073, 225.328827, 0.985374212, -0.170404434, 1.41561031e-07, 1.41561031e-07, 1.7285347e-06, 1, -0.170404434, -0.985374212, 1.7285347e-06),
    Crab_Cage = CFrame.new(474.803589, 149.664566, 229.49469, -0.721874595, 0, 0.692023814, 0, 1, 0, -0.692023814, 0, -0.721874595),
    Fast_Rod = CFrame.new(447.183563, 148.225739, 220.187454, 0.981104493, 1.26492232e-05, 0.193478703, -0.0522461236, 0.962867677, 0.264870107, -0.186291039, -0.269973755, 0.944674432),
    Flimsy_Rod = CFrame.new(471.107697, 148.36171, 229.642441, 0.841614008, 0.0774728209, -0.534493923, 0.00678436086, 0.988063335, 0.153898612, 0.540036798, -0.13314943, 0.831042409),
    GPS = CFrame.new(517.896729, 149.217636, 284.856842, 7.39097595e-06, -0.719539165, -0.694451928, -1, -7.39097595e-06, -3.01003456e-06, -3.01003456e-06, 0.694451928, -0.719539165),
    Long_Rod = CFrame.new(485.695038, 171.656326, 145.746109, -0.630167365, -0.776459217, -5.33461571e-06, 5.33461571e-06, -1.12056732e-05, 1, -0.776459217, 0.630167365, 1.12056732e-05),
    Lucky_Rod = CFrame.new(446.085999, 148.253006, 222.160004, 0.974526405, -0.22305499, 0.0233404674, 0.196993902, 0.901088715, 0.386306256, -0.107199371, -0.371867687, 0.922075212),
    Plastic_Rod = CFrame.new(454.425385, 148.169739, 229.172424, 0.951755166, 0.0709736273, -0.298537821, -3.42726707e-07, 0.972884834, 0.231290117, 0.306858391, -0.220131472, 0.925948203),
    Training_Rod = CFrame.new(457.693848, 148.357529, 230.414307, 1, -0, 0, 0, 0.975410998, 0.220393807, -0, -0.220393807, 0.975410998)
}

local fisktable = {}

-- Services
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

-- Locals
local LocalPlayer = Players.LocalPlayer
local LocalCharacter = LocalPlayer.Character
local HumanoidRootPart = LocalCharacter:FindFirstChild("HumanoidRootPart")
local ActiveFolder = Workspace:FindFirstChild("active")
local FishingZonesFolder = Workspace:FindFirstChild("zones"):WaitForChild("fishing")
local TpSpotsFolder = Workspace:FindFirstChild("world"):WaitForChild("spawns"):WaitForChild("TpSpots")
local NpcFolder = Workspace:FindFirstChild("world"):WaitForChild("npcs")
local PlayerGUI = LocalPlayer:FindFirstChildOfClass("PlayerGui")
local RenderStepped = RunService.RenderStepped
local WaitForSomeone = RenderStepped.Wait
local Debug = function()
    print(debug.info(2, "l"))
end

-- Variables
local autoShake = false
local autoShakeDelay = 0.1
local autoShakeMethod = "KeyCodeEvent"
local autoShakeClickOffsetX = 0
local autoShakeClickOffsetY = 0
local autoReel = false
local autoReelDelay = 2
local autoCast = false
local autoCastMode = "Legit"
local autoCastDelay = 2
local ZoneCast = false
local Zone = "Brine Pool"
local Noclip = false
local AntiDrown = false
local CollarPlayer = false
local Target
local FreezeChar = false

-- Rest
autoreelandshakeConnection = PlayerGUI.ChildAdded:Connect(function(GUI)
    if GUI:IsA("ScreenGui") and GUI.Name == "shakeui" then
        if GUI:FindFirstChild("safezone") ~= nil then
            GUI.safezone.ChildAdded:Connect(function(child)
                if child:IsA("ImageButton") and child.Name == "button" then
                    if autoShake then
                        task.wait(autoShakeDelay)
                        if child.Visible then
                            if autoShakeMethod == "ClickEvent" then
                                local pos = child.AbsolutePosition
                                local size = child.AbsoluteSize
                                VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, true, LocalPlayer, 0)
                                VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, false, LocalPlayer, 0)
                            elseif autoShakeMethod == "KeyCodeEvent" then
                                while WaitForSomeone(RenderStepped) do
                                    if autoShake and GUI.safezone:FindFirstChild(child.Name) ~= nil then
                                        task.wait()
                                        pcall(function()
                                            GuiService.SelectedObject = child
                                            if GuiService.SelectedObject == child then
                                                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                                                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                                            end
                                        end)
                                    else
                                        GuiService.SelectedObject = nil
                                        break
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
    if GUI:IsA("ScreenGui") and GUI.Name == "reel" then
        if autoReel and ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished") ~= nil then
            repeat task.wait(autoReelDelay) ReplicatedStorage.events.reelfinished:FireServer(100, false) until GUI == nil
        end
    end
end)

autoCastConnection = LocalCharacter.ChildAdded:Connect(function(child)
    if child:IsA("Tool") and child:FindFirstChild("events"):WaitForChild("cast") ~= nil and autoCast then
        task.wait(autoCastDelay)
        if autoCastMode == "Legit" then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, LocalPlayer, 0)
            HumanoidRootPart.ChildAdded:Connect(function()
                if HumanoidRootPart:FindFirstChild("power") ~= nil and HumanoidRootPart.power.powerbar.bar ~= nil then
                    HumanoidRootPart.power.powerbar.bar.Changed:Connect(function(property)
                        if property == "Size" then
                            if HumanoidRootPart.power.powerbar.bar.Size == UDim2.new(1, 0, 1, 0) then
                                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, LocalPlayer, 0)
                            end
                        end
                    end)
                end
            end)
        elseif autoCastMode == "Rage" then
            child.events.cast:FireServer(100)
        end
    end
end)

autoCastConnection2 = PlayerGUI.ChildRemoved:Connect(function(GUI)
    local Tool = LocalCharacter:FindFirstChildOfClass("Tool")
    if GUI.Name == "reel" and autoCast and Tool ~= nil and Tool:FindFirstChild("events"):WaitForChild("cast") ~= nil then
        task.wait(autoCastDelay)
        if autoCastMode == "Legit" then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, LocalPlayer, 0)
            HumanoidRootPart.ChildAdded:Connect(function()
                if HumanoidRootPart:FindFirstChild("power") ~= nil and HumanoidRootPart.power.powerbar.bar ~= nil then
                    HumanoidRootPart.power.powerbar.bar.Changed:Connect(function(property)
                        if property == "Size" then
                            if HumanoidRootPart.power.powerbar.bar.Size == UDim2.new(1, 0, 1, 0) then
                                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, LocalPlayer, 0)
                            end
                        end
                    end)
                end
            end)
        elseif autoCastMode == "Rage" then
            Tool.events.cast:FireServer(100)
        end
    end
end)

ZoneConnection = LocalCharacter.ChildAdded:Connect(function(child)
    if ZoneCast and child:IsA("Tool") and FishingZonesFolder:FindFirstChild(Zone) ~= nil then
        child.ChildAdded:Connect(function(blehh)
            if blehh.Name == "bobber" then
                local RopeConstraint = blehh:FindFirstChildOfClass("RopeConstraint")
                if ZoneCast and RopeConstraint ~= nil then
                    RopeConstraint.Changed:Connect(function(property)
                        if property == "Length" then
                            RopeConstraint.Length = math.huge
                        end
                    end)
                    RopeConstraint.Length = math.huge
                end
                task.wait(1)
                while WaitForSomeone(RenderStepped) do
                    if ZoneCast and blehh.Parent ~= nil then
                        task.wait()
                        blehh.CFrame = FishingZonesFolder[Zone].CFrame
                    else
                        break
                    end
                end
            end
        end)
    end
end)

CollarConnection = LocalCharacter.ChildAdded:Connect(function(child)
    if CollarPlayer and child:IsA("Tool") and Players:FindFirstChild(Target).Character:FindFirstChild("Head") ~= nil then
        child.ChildAdded:Connect(function(blehh)
            if blehh.Name == "bobber" then
                local RopeConstraint = blehh:FindFirstChildOfClass("RopeConstraint")
                if CollarPlayer and RopeConstraint ~= nil then
                    RopeConstraint.Changed:Connect(function(property)
                        if property == "Length" then
                            RopeConstraint.Length = math.huge
                        end
                    end)
                    RopeConstraint.Length = math.huge
                end
                task.wait(1)
                while WaitForSomeone(RenderStepped) do
                    if CollarPlayer and blehh.Parent ~= nil then
                        task.wait()
                        blehh.CFrame = Players:FindFirstChild(Target).Character:FindFirstChild("Head").CFrame + Vector3.new(0, -1, 0)
                    else
                        break
                    end
                end
            end
        end)
    end
end)

NoclipConnection = RunService.Stepped:Connect(function()
    if Noclip then
        if LocalCharacter ~= nil then
            for _, v in pairs(LocalCharacter:GetDescendants()) do
                if v:IsA("BasePart") and v.CanCollide then
                    v.CanCollide = false
                end
            end
        end
    end
end)

local SafeZone = Instance.new("Part")
SafeZone.Parent = Workspace
SafeZone.Size = Vector3.new(50, 2, 50)
SafeZone.CFrame = CFrame.new(9999, 9999, 9999)
SafeZone.Anchored = true

for _, v in pairs(FishingZonesFolder:GetChildren()) do
    if not table.find(fisktable, v.Name) then
        table.insert(fisktable, v.Name)
    end
end

FishingZonesFolder.ChildAdded:Connect(function(child)
    if not table.find(fisktable, child.Name) then
        table.insert(fisktable, child.Name)
    end
end)

for _, v in pairs(TpSpotsFolder:GetChildren()) do
    if not table.find(teleportSpots, v.Name) then
        table.insert(teleportSpots, v.Name)
    end
end

for _, v in pairs(NpcFolder:GetChildren()) do
    if not table.find(racistPeople, v.Name) and v.Name ~= "mirror Area" then
        table.insert(racistPeople, v.Name)
    end
end

NpcFolder.ChildAdded:Connect(function(child)
    if not table.find(racistPeople, child.Name) and child.Name ~= "mirror Area" then
        table.insert(racistPeople, child.Name)
    end
end)

-- Main Tab
local AutoShakeGroup = MainTab.Section({ Title = "AutoShake" })
local AutoReelGroup = MainTab.Section({ Title = "AutoReel" })
local AutoCastGroup = MainTab.Section({ Title = "AutoCast" })
local FishUtilitiesGroup = MainTab.Section({ Title = "Fish (🐟) Utilities" })
local ZoneCastGroup = MainTab.Section({ Title = "ZoneCast" })
local CollarPlayerGroup = MainTab.Section({ Title = "CollarPlayer" })

AutoShakeGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "AutoShake",
    Callback = function(Value)
        autoShake = Value
    end
})

AutoShakeGroup.Dropdown({
    Title = "Auto Shake Method",
    Options = {"ClickEvent", "KeyCodeEvent"},
    Default = autoShakeMethod,
    Flag = "AutoShakeMode",
    Callback = function(Value)
        autoShakeMethod = Value
    end
})

AutoShakeGroup.Slider({
    Title = "AutoShake Delay",
    Default = 0.1,
    Min = 0,
    Max = 10,
    Rounding = 1,
    Flag = "AutoShakeDelay",
    Callback = function(Value)
        autoShakeDelay = Value
    end
})

AutoReelGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "AutoReel",
    Callback = function(Value)
        autoReel = Value
    end
})

AutoReelGroup.Slider({
    Title = "AutoReel Delay",
    Default = 2,
    Min = 0,
    Max = 10,
    Rounding = 1,
    Flag = "AutoReelDelay",
    Callback = function(Value)
        autoReelDelay = Value
    end
})

AutoCastGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "AutoCast",
    Callback = function(Value)
        autoCast = Value
        local Tool = LocalCharacter:FindFirstChildOfClass("Tool")
        if Tool and Tool:FindFirstChild("events"):WaitForChild("cast") and Value then
            task.wait(autoCastDelay)
            if autoCastMode == "Legit" then
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, LocalPlayer, 0)
                HumanoidRootPart.ChildAdded:Connect(function()
                    if HumanoidRootPart:FindFirstChild("power") and HumanoidRootPart.power.powerbar.bar then
                        HumanoidRootPart.power.powerbar.bar.Changed:Connect(function(property)
                            if property == "Size" and HumanoidRootPart.power.powerbar.bar.Size == UDim2.new(1, 0, 1, 0) then
                                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, LocalPlayer, 0)
                            end
                        end)
                    end
                end)
            elseif autoCastMode == "Rage" then
                Tool.events.cast:FireServer(100)
            end
        end
    end
})

AutoCastGroup.Slider({
    Title = "AutoCast Delay",
    Default = 2,
    Min = 0,
    Max = 10,
    Rounding = 1,
    Flag = "AutoCastDelay",
    Callback = function(Value)
        autoCastDelay = Value
    end
})

AutoCastGroup.Dropdown({
    Title = "Auto Cast Mode",
    Options = {"Legit", "Rage"},
    Default = autoCastMode,
    Flag = "AutoCastMode",
    Callback = function(Value)
        autoCastMode = Value
    end
})

FishUtilitiesGroup.Button({
    Title = "Sell a fish",
    Callback = function()
        Workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Marc Merchant"):WaitForChild("merchant"):WaitForChild("sell"):InvokeServer()
    end
})

FishUtilitiesGroup.Button({
    Title = "Sell ALL fish",
    Callback = function()
        Workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Marc Merchant"):WaitForChild("merchant"):WaitForChild("sellall"):InvokeServer()
    end
})

FishUtilitiesGroup.Button({
    Title = "Appraise fish 🐟 (450C$)",
    Callback = function()
        Workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Appraiser"):WaitForChild("appraiser"):WaitForChild("appraise"):InvokeServer()
    end
})

ZoneCastGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "ZoneCast",
    Callback = function(Value)
        ZoneCast = Value
    end
})

ZoneCastGroup.Dropdown({
    Title = "Zone",
    Options = fisktable,
    Default = Zone,
    Flag = "ZoneCastValue",
    Callback = function(Value)
        Zone = Value
    end
})

CollarPlayerGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "CollarPlayer",
    Callback = function(Value)
        CollarPlayer = Value
    end
})

CollarPlayerGroup.Dropdown({
    Title = "Player",
    Options = function()
        local players = {}
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                table.insert(players, player.Name)
            end
        end
        return players
    end,
    Default = "",
    Flag = "CollarTarget",
    Callback = function(Value)
        Target = Value
    end
})

-- Teleports Tab
local TeleportsGroup = TeleportsTab.Section({ Title = "Teleports" })

TeleportsGroup.Dropdown({
    Title = "Place teleport",
    Options = teleportSpots,
    Default = "",
    Flag = "PlaceTeleport",
    Callback = function(Value)
        if teleportSpots and HumanoidRootPart then
            HumanoidRootPart.CFrame = TpSpotsFolder:FindFirstChild(Value).CFrame + Vector3.new(0, 5, 0)
        end
    end
})

TeleportsGroup.Dropdown({
    Title = "Teleport to Npc",
    Options = racistPeople,
    Default = "",
    Flag = "NPCTeleport",
    Callback = function(Value)
        if racistPeople and HumanoidRootPart then
            HumanoidRootPart.CFrame = NpcFolder:FindFirstChild(Value):WaitForChild("HumanoidRootPart").CFrame + Vector3.new(0, 1, 0)
        end
    end
})

TeleportsGroup.Dropdown({
    Title = "Teleport to item",
    Options = {"Bait_Crate", "Carbon_Rod", "Crab_Cage", "Fast_Rod", "Flimsy_Rod", "GPS", "Long_Rod", "Lucky_Rod", "Plastic_Rod", "Training_Rod"},
    Default = "",
    Flag = "ItemTeleport",
    Callback = function(Value)
        if itemSpots and HumanoidRootPart then
            HumanoidRootPart.CFrame = itemSpots[Value]
        end
    end
})

local TeleportToSafeZoneGroup = TeleportsTab.Section({ Title = "Safe Zone" })

TeleportToSafeZoneGroup.Button({
    Title = "Teleport to safe zone",
    Callback = function()
        HumanoidRootPart.CFrame = SafeZone.CFrame + Vector3.new(0, 2, 0)
    end
})

-- LocalPlayer Tab
local LocalPlayerGroup = LocalPlayerTab.Section({ Title = "LocalPlayer" })

LocalPlayerGroup.Toggle({
    Title = "Noclip",
    Default = false,
    Flag = "Noclip",
    Callback = function(Value)
        Noclip = Value
    end
})

LocalPlayerGroup.Toggle({
    Title = "Disable Oxygen",
    Default = false,
    Flag = "AntiDrown",
    Callback = function(Value)
        AntiDrown = Value
        if Value then
            if LocalCharacter and LocalCharacter:FindFirstChild("client"):WaitForChild("oxygen") and LocalCharacter.client.oxygen.Enabled then
                LocalCharacter.client.oxygen.Enabled = false
            end
            CharAddedAntiDrownCon = LocalPlayer.CharacterAdded:Connect(function()
                if LocalCharacter and LocalCharacter:FindFirstChild("client"):WaitForChild("oxygen") and LocalCharacter.client.oxygen.Enabled and AntiDrown then
                    LocalCharacter.client.oxygen.Enabled = false
                end
            end)
        else
            if LocalCharacter and LocalCharacter:FindFirstChild("client"):WaitForChild("oxygen") and not LocalCharacter.client.oxygen.Enabled then
                LocalCharacter.client.oxygen.Enabled = true
            end
        end
    end
})

local ResetRodGroup = LocalPlayerTab.Section({ Title = "Reset" })

ResetRodGroup.Button({
    Title = "Reset rod",
    Callback = function()
        local tool = LocalCharacter:FindFirstChildOfClass("Tool")
        if tool and tool:FindFirstChild("events"):WaitForChild("reset") then
            tool.events.reset:FireServer()
        end
    end
})

local AntiAfkGroup = LocalPlayerTab.Section({ Title = "AntiAFK" })

AntiAfkGroup.Button({
    Title = "Anti-AFK",
    Callback = function()
        Material.Notify({ Title = "Anti-AFK", Description = "Anti-AFK is now running!", Duration = 3 })
        LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
})

local FreezeCharacterGroup = LocalPlayerTab.Section({ Title = "Freeze Character" })

FreezeCharacterGroup.Toggle({
    Title = "Enabled",
    Default = false,
    Flag = "FreezeCharacter",
    Callback = function(Value)
        local oldpos = HumanoidRootPart.CFrame
        FreezeChar = Value
        task.wait()
        while WaitForSomeone(RenderStepped) do
            if FreezeChar and HumanoidRootPart then
                task.wait()
                HumanoidRootPart.CFrame = oldpos
            else
                break
            end
        end
    end
})

-- Settings Tab
local SettingsGroup = SettingsTab.Section({ Title = "Settings" })
local CreditsGroup = SettingsTab.Section({ Title = "Credits" })

CreditsGroup.Label({ Title = "Made by ogsunny!" })
CreditsGroup.Label({ Title = "Made with love and hate :3" })

CreditsGroup.Button({
    Title = "Copy Ogsunny Discord Link",
    Callback = function()
        setclipboard('https://discord.gg/DEkfE99JFh')
    end
})

CreditsGroup.Button({
    Title = "Copy Main Discord Link",
    Callback = function()
        setclipboard('https://discord.gg/VudXCDCaBN')
    end
})

CreditsGroup.Label({ Title = "البرود يا جماعه هو الحل" })

SettingsGroup.Button({
    Title = "Unload",
    Callback = function()
        Window:Unload()
    end
})

SettingsGroup.Keybind({
    Title = "Menu Keybind",
    Default = Enum.KeyCode.End,
    Flag = "MenuKeybind",
    Callback = function(Key)
        Window.Keybind = Key
    end
})

-- Notify the user
Material.Notify({
    Title = "Ogsunny Hub",
    Description = "Script loaded successfully!",
    Duration = 3
})

-- Check for updates
task.spawn(function()
    local success, LatestVer = pcall(function()
        local version = game:HttpGet("https://raw.githubusercontent.com/kylosilly/femboyware/refs/heads/main/fischver")
        return HttpService:JSONDecode(version)
    end)

    if success then
        if Version ~= LatestVer then
            Material.Notify({
                Title = "Update Available",
                Description = "You are using an outdated version of the Ogsunny script. Join our Discord for the latest version.",
                Duration = 5
            })
        end
    end
end)
