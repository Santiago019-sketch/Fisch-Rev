-- Initialize Neverlose
local Neverlose = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Neverlose/main/source.lua"))()

-- Create a Window
local Window = Neverlose:CreateWindow({
    Name = "Fisch ðŸ—¿",
    Theme = Neverlose.Themes.Dark,
    Size = UDim2.fromOffset(600, 400),
    Position = UDim2.fromScale(0.5, 0.5),
})

-- Main Tab
local MainTab = Window:CreateTab({
    Name = "Main",
    Icon = "rbxassetid://4483362458",
})

-- Auto Cast Section
local autoCast = false
local autoCastMode = "Legit"
local autoCastDelay = 2

MainTab:CreateToggle({
    Name = "Auto Cast",
    Default = false,
    Flag = "AutoCast",
    Callback = function(Value)
        autoCast = Value
        if autoCast then
            -- Your auto cast logic here
        end
    end,
})

MainTab:CreateDropdown({
    Name = "Auto Cast Mode",
    Options = {"Legit", "Rage"},
    Flag = "AutoCastMode",
    Callback = function(Selected)
        autoCastMode = Selected
    end,
})

MainTab:CreateSlider({
    Name = "Auto Cast Cooldown",
    Min = 1,
    Max = 10,
    Increment = 0.1,
    Default = 2,
    Flag = "AutoCastDelay",
    Callback = function(Value)
        autoCastDelay = Value
    end,
})

-- Zone Cast Section
local ZoneCast = false
local SelectedZone = nil
local ZonesList = {}

-- Fill ZonesList with unique fishing zones based on names
for _, zone in pairs(workspace.zones.fishing:GetChildren()) do
    if not table.find(ZonesList, zone.Name) then
        table.insert(ZonesList, zone.Name)
    end
end

MainTab:CreateToggle({
    Name = "Zone Cast",
    Default = false,
    Flag = "ZoneCast",
    Callback = function(Value)
        ZoneCast = Value
        if ZoneCast then
            -- Your zone cast logic here
        end
    end,
})

MainTab:CreateDropdown({
    Name = "Select Fishing Zone",
    Options = ZonesList,
    Flag = "SelectedZone",
    Callback = function(Selected)
        SelectedZone = Selected
    end,
})

-- Auto Reel Section
local autoReel = false
local autoReelDelay = 1

MainTab:CreateToggle({
    Name = "Auto Reel",
    Default = false,
    Flag = "AutoReel",
    Callback = function(Value)
        autoReel = Value
        if autoReel then
            -- Your auto reel logic here
        end
    end,
})

MainTab:CreateSlider({
    Name = "Auto Reel Cooldown",
    Min = 0,
    Max = 10,
    Increment = 0.1,
    Default = 1,
    Flag = "AutoReelDelay",
    Callback = function(Value)
        autoReelDelay = Value
    end,
})

-- Auto Shake Section
local autoShake = false
local autoShakeDelay = 1
local autoShakeMethod = "ClickEvent"

MainTab:CreateToggle({
    Name = "Auto Shake",
    Default = false,
    Flag = "AutoShake",
    Callback = function(Value)
        autoShake = Value
        if autoShake then
            -- Your auto shake logic here
        end
    end,
})

MainTab:CreateDropdown({
    Name = "Auto Shake Mode",
    Options = {"ClickEvent", "KeyCodeEvent"},
    Flag = "AutoShakeMethod",
    Callback = function(Selected)
        autoShakeMethod = Selected
    end,
})

MainTab:CreateSlider({
    Name = "Auto Shake Cooldown",
    Min = 0,
    Max = 10,
    Increment = 0.1,
    Default = 1,
    Flag = "AutoShakeDelay",
    Callback = function(Value)
        autoShakeDelay = Value
    end,
})

-- Sell Fish Buttons
MainTab:CreateButton({
    Name = "Sell Fish (Holding)",
    Callback = function()
        -- Your sell fish logic here
    end,
})

MainTab:CreateButton({
    Name = "Sell All Fish",
    Callback = function()
        -- Your sell all fish logic here
    end,
})

MainTab:CreateButton({
    Name = "Appraise Fish (450C$)",
    Callback = function()
        -- Your appraise fish logic here
    end,
})

-- Teleports Tab
local TeleportsTab = Window:CreateTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483362458",
})

TeleportsTab:CreateLabel("Places")

local function capitalizeFirstLetter(str)
    return str:sub(1, 1):upper() .. str:sub(2):lower()
end

local teleportOptions = {}
for _, spot in pairs(workspace.world.spawns.TpSpots:GetChildren()) do
    table.insert(teleportOptions, capitalizeFirstLetter(spot.Name))
end

TeleportsTab:CreateDropdown({
    Name = "Teleport to Place",
    Options = teleportOptions,
    Flag = "TeleportPlace",
    Callback = function(Selected)
        local actualSpotName = Selected:lower()
        local selectedPlace = workspace.world.spawns.TpSpots:FindFirstChild(actualSpotName)
        if selectedPlace and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = selectedPlace.CFrame + Vector3.new(0, 5, 0)
        end
    end,
})

local formattedNpcNames = {}
for npcName, _ in pairs(npcSpots) do
    local formattedName = npcName:gsub("_", " "):gsub("(%a)([%w_']*)", function(first, rest) return first:upper() .. rest:lower() end)
    table.insert(formattedNpcNames, formattedName)
end

TeleportsTab:CreateLabel("NPCs")

TeleportsTab:CreateDropdown({
    Name = "Teleport to NPC",
    Options = formattedNpcNames,
    Flag = "TeleportNPC",
    Callback = function(SelectedNpc)
        local originalName = SelectedNpc:gsub(" ", "_")
        local npcCFrame = npcSpots[originalName]

        if npcCFrame and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npcCFrame + Vector3.new(0, 2, 0)
        end
    end,
})

TeleportsTab:CreateLabel("Items")

TeleportsTab:CreateDropdown({
    Name = "Teleport to Item",
    Options = {
        "Bait Crate",
        "Carbon Rod",
        "Crab Cage",
        "Fast Rod",
        "Flimsy Rod",
        "GPS",
        "Long Rod",
        "Lucky Rod",
        "Plastic Rod",
        "Training Rod"
    },
    Flag = "TeleportItem",
    Callback = function(Selected)
        local itemCFrame = itemSpots[Selected:gsub(" ", "_")]
        if itemCFrame then
            local newCFrame = CFrame.new(itemCFrame.Position + Vector3.new(0, 5, 0)) * CFrame.Angles(0, itemCFrame:ToEulerAnglesXYZ())
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = newCFrame
        end
    end,
})

TeleportsTab:CreateLabel("SafeZone")

TeleportsTab:CreateButton({
    Name = "Teleport to SafeZone",
    Callback = function()
        if safePart and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = safePart.CFrame + Vector3.new(0, 5, 0)
        end
    end,
})

-- Misc Tab
local MiscTab = Window:CreateTab({
    Name = "Misc",
    Icon = "rbxassetid://4483362458",
})

MiscTab:CreateLabel("Credits")
MiscTab:CreateLabel("Script made by Palomita")

local FPS = 0
local FrameCounter = 0
local FrameTimer = tick()

local pingLabel = MiscTab:CreateLabel("Ping: " .. tostring(math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())))

local fpsLabel = MiscTab:CreateLabel("FPS: 0")

coroutine.wrap(function()
    while true do
        FrameCounter += 1

        if (tick() - FrameTimer) >= 1 then
            FPS = FrameCounter
            FrameTimer = tick()
            FrameCounter = 0
        end

        local ping = math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())

        fpsLabel:Set("FPS: " .. tostring(FPS))
        pingLabel:Set("Ping: " .. tostring(ping))

        wait(0.1)
    end
end)()

local AntiDrown = false
local LocalPlayer = game.Players.LocalPlayer
local LocalCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local CharAddedAntiDrownCon

MiscTab:CreateToggle({
    Name = "AntiDrown",
    Default = false,
    Flag = "AntiDrown",
    Callback = function(Value)
        AntiDrown = Value
        if Value == true then
            if LocalCharacter and LocalCharacter:FindFirstChild("client") then
                local oxygen = LocalCharacter.client:FindFirstChild("oxygen")
                if oxygen and oxygen.Enabled == true then
                    oxygen.Enabled = false
                end
            end
            CharAddedAntiDrownCon = LocalPlayer.CharacterAdded:Connect(function()
                LocalCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                if LocalCharacter and LocalCharacter:FindFirstChild("client") then
                    local oxygen = LocalCharacter.client:FindFirstChild("oxygen")
                    if oxygen and oxygen.Enabled == true and AntiDrown == true then
                        oxygen.Enabled = false
                    end
                end
            end)
        else
            if LocalCharacter and LocalCharacter:FindFirstChild("client") then
                local oxygen = LocalCharacter.client:FindFirstChild("oxygen")
                if oxygen and oxygen.Enabled == false then
                    oxygen.Enabled = true
                end
            end
            if CharAddedAntiDrownCon then
                CharAddedAntiDrownCon:Disconnect()
            end
        end
    end,
})

-- Initialize Collar Player settings
local CollarPlayer = false
local SelectedPlayer = nil
local PlayerList = {}

-- Fill PlayerList with the names of all players in the game
for _, player in pairs(game.Players:GetPlayers()) do
    table.insert(PlayerList, player.Name)
end

-- Update PlayerList whenever a player joins or leaves
game.Players.PlayerAdded:Connect(function(player)
    table.insert(PlayerList, player.Name)
end)

game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(PlayerList) do
        if name == player.Name then
            table.remove(PlayerList, i)
            break
        end
    end
end)

MiscTab:CreateToggle({
    Name = "Collar Player",
    Default = false,
    Flag = "CollarPlayer",
    Callback = function(Value)
        CollarPlayer = Value
        if CollarPlayer and SelectedPlayer then
            -- Your collar player logic here
        end
    end,
})

MiscTab:CreateDropdown({
    Name = "Select Player",
    Options = PlayerList,
    Flag = "SelectedPlayer",
    Callback = function(Selected)
        SelectedPlayer = Selected
    end,
})

MiscTab:CreateButton({
    Name = "Boost FPS",
    Callback = function()
        _G.Ignore = {}
        _G.Settings = {
            Players = {
                ["Ignore Me"] = true,
                ["Ignore Others"] = true,
                ["Ignore Tools"] = true
            },
            Meshes = {
                NoMesh = false,
                NoTexture = false,
                Destroy = false
            },
            Images = {
                Invisible = true,
                Destroy = false
            },
            Explosions = {
                Smaller = true,
                Invisible = false,
                Destroy = false
            },
            Particles = {
                Invisible = true,
                Destroy = false
            },
            TextLabels = {
                LowerQuality = true,
                Invisible = false,
                Destroy = false
            },
            MeshParts = {
                LowerQuality = true,
                Invisible = false,
                NoTexture = false,
                NoMesh = false,
                Destroy = false
            },
            Other = {
                ["FPS Cap"] = 360,
                ["No Camera Effects"] = true,
                ["No Clothes"] = true,
                ["Low Water Graphics"] = true,
                ["No Shadows"] = true,
                ["Low Rendering"] = true,
                ["Low Quality Parts"] = true,
                ["Low Quality Models"] = true,
                ["Reset Materials"] = true,
            }
        }
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/FPSBooster.lua"))()
    end,
})

MiscTab:CreateButton({
    Name = "Destroy GUI",
    Callback = function()
        -- Disable all features and destroy the GUI
        autoCast = false
        autoReel = false
        autoShake = false
        ZoneCast = false
        AntiDrown = false
        CollarPlayer = false

        if safePart then
            safePart:Destroy()
            safePart = nil
        end

        Neverlose:Destroy()
    end,
})
