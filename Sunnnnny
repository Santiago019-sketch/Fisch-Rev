-- Ensure this script is a LocalScript in StarterPlayerScripts or StarterCharacterScripts

-- Load Fluent UI Library
local success, Fluent = pcall(function()
    return loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
end)

if not success then
    warn("Failed to load Fluent UI library:", Fluent)
    return
end

-- Define NPC spots
local npcSpots = {
    Marc_Merchant = workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Marc Merchant").HumanoidRootPart.CFrame,
    Appraiser = workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Appraiser").HumanoidRootPart.CFrame,
    Fisherman = workspace:WaitForChild("world"):WaitForChild("npcs"):FindFirstChild("Fisherman") and workspace.world.npcs.Fisherman.HumanoidRootPart.CFrame or CFrame.new(0,0,0)
}

-- Create a Window
local Window = Fluent:CreateWindow({
    Title = "Fisch ðŸ—¿",
    Size = UDim2.fromOffset(600, 400),
    Position = UDim2.fromScale(0.5, 0.5),
})

-- Main Tab
local MainTab = Window:AddTab({
    Name = "Main",
    Icon = "rbxassetid://4483362458",
})

-- Auto Cast Section
local autoCast = false
local autoCastMode = "Legit"
local autoCastDelay = 2
local autoCastConnection

MainTab:AddToggle("AutoCast", function(Value)
    autoCast = Value
    if autoCast then
        print("Auto Cast Enabled")
        autoCastConnection = game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
            character:WaitForChild("HumanoidRootPart")
            character.ChildAdded:Connect(function(child)
                if child:IsA("Tool") and child:FindFirstChild("events") and child.events:FindFirstChild("cast") and autoCast then
                    task.wait(autoCastDelay)
                    if autoCastMode == "Legit" then
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game.Players.LocalPlayer, 0)
                        character.HumanoidRootPart.ChildAdded:Connect(function(powerBar)
                            if powerBar.Name == "power" and powerBar:FindFirstChild("powerbar") then
                                powerBar.powerbar.bar.Changed:Connect(function(property)
                                    if property == "Size" and powerBar.powerbar.bar.Size == UDim2.new(1, 0, 1, 0) then
                                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game.Players.LocalPlayer, 0)
                                    end
                                end)
                            end
                        end)
                    elseif autoCastMode == "Rage" then
                        child.events.cast:FireServer(100)
                    end
                end
            end)
        end)
    else
        if autoCastConnection then
            autoCastConnection:Disconnect()
            autoCastConnection = nil
        end
    end
end)

MainTab:AddDropdown("AutoCastMode", {"Legit", "Rage"}, function(Selected)
    autoCastMode = Selected
    print("Auto Cast Mode:", autoCastMode)
end)

MainTab:AddSlider("AutoCastDelay", {Min = 1, Max = 10, Increment = 0.1, Default = 2}, function(Value)
    autoCastDelay = Value
    print("Auto Cast Cooldown:", autoCastDelay)
end)

-- Teleports Tab
local TeleportsTab = Window:AddTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483362458",
})

TeleportsTab:AddLabel("Places")

local function capitalizeFirstLetter(str)
    return str:sub(1, 1):upper() .. str:sub(2):lower()
end

local teleportOptions = {}
for _, spot in pairs(workspace:WaitForChild("world"):WaitForChild("spawns"):WaitForChild("TpSpots"):GetChildren()) do
    table.insert(teleportOptions, capitalizeFirstLetter(spot.Name))
end

TeleportsTab:AddDropdown("TeleportPlace", teleportOptions, function(Selected)
    local actualSpotName = Selected:lower()
    local selectedPlace = workspace.world.spawns.TpSpots:FindFirstChild(actualSpotName)
    if selectedPlace and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = selectedPlace.CFrame + Vector3.new(0, 5, 0)
    end
end)

TeleportsTab:AddLabel("NPCs")

-- Get NPC names for the dropdown
local formattedNpcNames = {}
for npcName, _ in pairs(npcSpots) do
    local formattedName = npcName:gsub("_", " "):gsub("(%a)([%w_']*)", function(first, rest) return first:upper() .. rest:lower() end)
    table.insert(formattedNpcNames, formattedName)
end

TeleportsTab:AddDropdown("TeleportNPC", formattedNpcNames, function(SelectedNpc)
    local originalName = SelectedNpc:gsub(" ", "_")
    local npcCFrame = npcSpots[originalName]

    if npcCFrame and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npcCFrame + Vector3.new(0, 2, 0)
    end
end)

-- Credits
local MiscTab = Window:AddTab({
    Name = "Misc",
    Icon = "rbxassetid://4483362458",
})

MiscTab:AddLabel("Credits")
MiscTab:AddLabel("Script made by Palomita")
MiscTab:AddLabel("Credits to Sunny")

-- Initialize the UI to ensure it's visible
Fluent:SelectTab(MainTab)
