-- Improved Fisch Script with Orion UI Library
-- More interactive and error-free

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Fisch Hub", HiderKeybind = Enum.KeyCode.RightControl, SaveConfig = true, ConfigFolder = "FischConfig"})

local VIM = game:GetService("VirtualInputManager")
local GuiService = game:GetService("GuiService")
local LocalPlayer = game.Players.LocalPlayer

local Options = {
    AutoShake = false,
    AutoShakeDelay = 0.3,
    AutoMinigame = false,
    AutoCast = false,
    FloatOnWater = false,
    Lock = false,
    AutoSell = false,
    AutoSellDelay = 3
}

local Internal = {
    FloatPart = nil,
    LockedPosition = nil,
    SelectedIsland = "Moosewood",
    SelectedWorldEvent = "Traveler Merchant"
}

local AbundanceData = {}

-- Utility Functions
local Utilities = {}

function Utilities.GetAllAbundanceZones()
    local Abundances = {}
    for _, Zone in pairs(game:GetService("Workspace").zones.fishing:GetChildren()) do
        local Info = {}
        if Zone:FindFirstChild("Abundance") then
            if Zone:FindFirstChild("Abundance"):FindFirstChild("Chance") then
                Info.Chance = Zone.Abundance.Chance.Value
            else
                Info.Chance = 1
            end
            Info.Position = Zone.Position
            if Abundances[Zone.Abundance.Value] == nil then
                Abundances[Zone.Abundance.Value] = Info
            elseif Abundances[Zone.Abundance.Value].Chance < Info.Chance then
                Abundances[Zone.Abundance.Value] = Info
            end
        end
    end
    return Abundances
end

-- Core Functions
local Core = {}

function Core.TapShake()
    local shakeUI = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("shakeui")
    if shakeUI and shakeUI.Enabled then
        local safezone = shakeUI:FindFirstChild("safezone")
        if safezone then
            local button = safezone:FindFirstChild("button")
            if button and button:IsA("ImageButton") and button.Visible then
                if Options.AutoShake then
                    GuiService.SelectedObject = button
                    VIM:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                    VIM:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                end
            end
        end
    end
end

function Core.InstantReel()
    game:GetService("ReplicatedStorage").events.reelfinished:FireServer(100, true)
end

function Core.Cast()
    local player = game.Players.LocalPlayer
    local character = player.Character

    if character then
        -- Find the equipped fishing rod
        local tool = character:FindFirstChildOfClass("Tool")

        if tool then
            -- Check if the tool is already casting (has a bobber)
            local hasBobber = tool:FindFirstChild("bobber")

            if not hasBobber then
                -- Get the cast event
                local castEvent = tool:FindFirstChild("events") and tool.events:FindFirstChild("cast")

                if castEvent then
                    -- Generate a random power between 90-99
                    local power = math.random(90, 99)
                    
                    -- Cast with the random power
                    castEvent:FireServer(power, 1)
                    
                    -- Ensure the character is not anchored
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        humanoidRootPart.Anchored = false
                    end
                end
            end
        end
    end
end

function Core.SellAll()
    workspace.world.npcs["Marc Merchant"].merchant.sellall:InvokeServer()
end

function Core.AutoSellWithReturn()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local currentPosition = rootPart.CFrame
    local sellPosition = CFrame.new(464, 151, 232)
    
    -- Store whether lock was active
    local wasLockActive = false
    if Options.Lock then
        wasLockActive = true
        Options.Lock = false
    end

    -- Teleport to merchant
    rootPart.CFrame = sellPosition
    task.wait(0.5)

    -- Sell all items
    workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Marc Merchant"):WaitForChild("merchant"):WaitForChild("sellall"):InvokeServer()

    -- Wait and return to original position
    task.wait(1)
    rootPart.CFrame = currentPosition

    -- Restore lock if it was active
    if wasLockActive then
        Options.Lock = true
    end
end

function Core.GetFish()
    local fishList = {}
    for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        table.insert(fishList, v.Name)
    end
    return fishList
end

function Core.LockPosition()
    if Internal.LockedPosition and Options.Lock then
        game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Internal.LockedPosition
    end
end

function Core.FloatOnWater()
    pcall(function()
        if Internal.FloatPart then
            Internal.FloatPart:Destroy()
        end
        Internal.FloatPart = Instance.new("Part", workspace)
        Internal.FloatPart.Anchored = true
        Internal.FloatPart.Size = Vector3.new(10,1,10)
        Internal.FloatPart.Position = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, 133.77, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
        Internal.FloatPart.Transparency = 0.7
        game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X, 150, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)
    end)
end

function Core.OpenBoatUI()
    local hud = game:GetService("Players").LocalPlayer.PlayerGui.hud
    if hud and hud:FindFirstChild("safezone") and hud.safezone:FindFirstChild("shipwright") then
        hud.safezone.shipwright.Visible = not hud.safezone.shipwright.Visible
    end
end

-- Setup UI Tabs
local FishingTab = Window:MakeTab({
    Name = "Fishing",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportTab = Window:MakeTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483364237",
    PremiumOnly = false
})

local InteractTab = Window:MakeTab({
    Name = "Interaction",
    Icon = "rbxassetid://4483345821",
    PremiumOnly = false
})

local AbundanceTab = Window:MakeTab({
    Name = "Abundances",
    Icon = "rbxassetid://4483345737",
    PremiumOnly = false
})

-- Fishing Tab
FishingTab:AddToggle({
    Name = "Auto Shake (Enter)",
    Default = false,
    Callback = function(Value)
        Options.AutoShake = Value
    end
})

FishingTab:AddSlider({
    Name = "Auto Shake Delay",
    Min = 0.1,
    Max = 1,
    Default = 0.3,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.1,
    ValueName = "seconds",
    Callback = function(Value)
        Options.AutoShakeDelay = Value
    end
})

FishingTab:AddToggle({
    Name = "Auto Reel (Blatant)",
    Default = false,
    Callback = function(Value)
        Options.AutoMinigame = Value
    end
})

FishingTab:AddToggle({
    Name = "Auto Cast",
    Default = false,
    Callback = function(Value)
        Options.AutoCast = Value
    end
})

FishingTab:AddToggle({
    Name = "Float On Water",
    Default = false,
    Callback = function(Value)
        Options.FloatOnWater = Value
        if Value then
            Core.FloatOnWater()
        end
    end
})

FishingTab:AddToggle({
    Name = "Lock Position",
    Default = false,
    Callback = function(Value)
        Options.Lock = Value
        if Value then
            Internal.LockedPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        end
    end
})

-- Interaction Tab
InteractTab:AddButton({
    Name = "Sell All Fish",
    Callback = function()
        Core.SellAll()
    end
})

InteractTab:AddToggle({
    Name = "Auto Sell",
    Default = false,
    Callback = function(Value)
        Options.AutoSell = Value
    end
})

InteractTab:AddSlider({
    Name = "Auto Sell Delay",
    Min = 1,
    Max = 30,
    Default = 3,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "minutes",
    Callback = function(Value)
        Options.AutoSellDelay = Value
    end
})

InteractTab:AddButton({
    Name = "Open/Close Boat UI",
    Callback = function()
        Core.OpenBoatUI()
    end
})

-- Teleport Tab
local IslandList = {"Moosewood", "Roslit Bay", "Terrapin", "Sunstone", "Statue of Sovereignty", 
                   "Mushgrove Swamp", "Snowcap", "Vertigo", "Keepers Altar", "The Arch", "Desolate Deep"}

TeleportTab:AddDropdown({
    Name = "Select Island",
    Default = "Moosewood",
    Options = IslandList,
    Callback = function(Value)
        Internal.SelectedIsland = Value
    end
})

TeleportTab:AddButton({
    Name = "Teleport to Island",
    Callback = function()
        local rootPart = LocalPlayer.Character.HumanoidRootPart
        if Internal.SelectedIsland == "Moosewood" then
            rootPart.CFrame = CFrame.new(382.893, 134.501, 242.632)
        elseif Internal.SelectedIsland == "Roslit Bay" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.roslit.Position)
        elseif Internal.SelectedIsland == "Terrapin" then
            rootPart.CFrame = CFrame.new(-146.693, 144.931, 1903.16)
        elseif Internal.SelectedIsland == "Sunstone" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.sunstone.Position)
        elseif Internal.SelectedIsland == "Statue of Sovereignty" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.statue.Position)
        elseif Internal.SelectedIsland == "Mushgrove Swamp" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.mushgrove.Position)
        elseif Internal.SelectedIsland == "Snowcap" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.snowcap.Position)
        elseif Internal.SelectedIsland == "Vertigo" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.vertigo.Position)
        elseif Internal.SelectedIsland == "Keepers Altar" then
            rootPart.CFrame = CFrame.new(1317.79, -805.292, -111.615)
        elseif Internal.SelectedIsland == "The Arch" then
            rootPart.CFrame = CFrame.new(game:GetService("Workspace").world.spawns.TpSpots.arch.Position)
        elseif Internal.SelectedIsland == "Desolate Deep" then
            rootPart.CFrame = CFrame.new(-1525.85986328125, -234.70187377929688, -2856.092041015625)
        end
        OrionLib:MakeNotification({
            Name = "Teleported",
            Content = "Successfully teleported to " .. Internal.SelectedIsland,
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

local WorldEventOptions = {"Traveler Merchant", "Strange Whirlpool"}

TeleportTab:AddDropdown({
    Name = "Select World Event",
    Default = "Traveler Merchant",
    Options = WorldEventOptions,
    Callback = function(Value)
        Internal.SelectedWorldEvent = Value
    end
})

TeleportTab:AddButton({
    Name = "Teleport to World Event",
    Callback = function()
        if Internal.SelectedWorldEvent == "Traveler Merchant" then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.active["Merchant Boat"].Boat["Merchant Boat"].r.HandlesR.Position)
        elseif Internal.SelectedWorldEvent == "Strange Whirlpool" then
            local offset = Vector3.new(0, 125, 0)
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.zones.fishing.Isonade.Position + offset)
        end
        OrionLib:MakeNotification({
            Name = "Teleported",
            Content = "Successfully teleported to " .. Internal.SelectedWorldEvent,
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

TeleportTab:AddButton({
    Name = "Teleport to Trident",
    Callback = function()
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1483.99304, -225.975464, -2201.59741)
        OrionLib:MakeNotification({
            Name = "Teleported",
            Content = "Successfully teleported to the Trident",
            Image = "rbxassetid://4483345998",
            Time = 3
        })
    end
})

-- Abundance Tab
local abundanceDropdown
local abundanceLabel

AbundanceTab:AddLabel("Loading Abundance Data...")

local function RefreshAbundanceData()
    local abundanceZones = Utilities.GetAllAbundanceZones()
    AbundanceData = abundanceZones
    
    local fishNames = {}
    for name, _ in pairs(abundanceZones) do
        table.insert(fishNames, name)
    end
    
    if abundanceDropdown then
        abundanceDropdown:Refresh(fishNames, fishNames[1])
    else
        abundanceDropdown = AbundanceTab:AddDropdown({
            Name = "Select Fish Abundance",
            Default = fishNames[1] or "None Found",
            Options = fishNames,
            Callback = function(Value)
                if AbundanceData[Value] then
                    if abundanceLabel then
                        abundanceLabel:Set("Chance: " .. tostring(AbundanceData[Value].Chance) .. "%")
                    end
                end
            end
        })
        
        abundanceLabel = AbundanceTab:AddLabel("Chance: 0%")
        
        AbundanceTab:AddButton({
            Name = "Go to Abundance Zone",
            Callback = function()
                local selectedFish = abundanceDropdown.Value
                if AbundanceData[selectedFish] then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Vector3.new(
                        AbundanceData[selectedFish].Position.X, 
                        137.77, 
                        AbundanceData[selectedFish].Position.Z
                    )
                    OrionLib:MakeNotification({
                        Name = "Teleported",
                        Content = "Going to " .. selectedFish .. " abundance zone",
                        Image = "rbxassetid://4483345998",
                        Time = 3
                    })
                end
            end
        })
    end
end

-- Main Loops
spawn(function()
    while true do
        task.wait(0.005)
        if Options.Lock then
            Core.LockPosition()
        end
        
        if Options.FloatOnWater then
            Core.FloatOnWater()
        end
        
        if Options.AutoShake then
            Core.TapShake()
        end
        
        if Options.AutoMinigame then
            Core.InstantReel()
        end
    end
end)

spawn(function()
    while true do
        task.wait(1)
        if Options.AutoCast then
            Core.Cast()
        end
    end
end)

spawn(function()
    while true do
        task.wait(Options.AutoSellDelay * 60)
        if Options.AutoSell then
            Core.AutoSellWithReturn()
        end
    end
end)

spawn(function()
    while true do
        RefreshAbundanceData()
        task.wait(10)
    end
end)

-- Initialize
OrionLib:MakeNotification({
    Name = "Fisch Script Loaded",
    Content = "Any fishing rod will work with this script!",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Clean up on script end
game:GetService("CoreGui").ChildRemoved:Connect(function(child)
    if child.Name == "Orion" then
        OrionLib:Destroy()
        if Internal.FloatPart then
            Internal.FloatPart:Destroy()
        end
    end
end)
