-- // // // Features List // // // --

local AutoFish = false
local Dupe = false
local IngredientFarm = false
local AutoPot = false
local AutoCrabCages = false

-- // // // Variables // // // --

local Players = game:GetService('Players')
local CoreGui = game:GetService('StarterGui')
local GuiService = game:GetService('GuiService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local ContextActionService = game:GetService('ContextActionService')
local VirtualInputManager = game:GetService('VirtualInputManager')
local UserInputService = game:GetService('UserInputService')
local LocalPlayer = Players.LocalPlayer

-- // // // UI Library Loading // // // --

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "CER3 - Fisch",
    SubTitle = "v.beta",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false, 
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local WindowHidden = false

-- // Directly Load Main Tabs // --
local Tabs = { 
    AutoFish = Window:AddTab({ Title = "Auto Fish", Icon = "mouse" }),
    Teleports = Window:AddTab({ Title = "Teleports", Icon = "map-pin" }),
    Sells = Window:AddTab({ Title = "Sell", Icon = "piggy-bank" }),
    Player = Window:AddTab({ Title = "Player", Icon = "user" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "globe" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

Window:SelectTab(1)

ShowNotification("CER3 Has Successfully Loaded.")

-- // // // Features // // // --

-- // Auto Fish // --

local Enabled = false
local Rod = false
local Casted = false
local Progress = false
local Finished = false

local ZoneFish = false

local Keybind = Enum.KeyCode.Q
local waittime = 0.001

function ToggleFarm(Name, State, Input)
    if State == Enum.UserInputState.Begin then
        Enabled = not Enabled

        if not Enabled then
            Finished = false
            Progress = false

            if Rod then
                Rod.events.reset:FireServer()
            end
        end
    end
end

LocalPlayer.Character.ChildAdded:Connect(function(Child)
    if Child:IsA('Tool') and Child.Name:lower():find('rod') then
        Rod = Child
    end
end)

LocalPlayer.Character.ChildRemoved:Connect(function(Child)
    if Child == Rod then
        Enabled = false
        Finished = false
        Progress = false
        Rod = nil
    end
end)

LocalPlayer.PlayerGui.DescendantAdded:Connect(function(Descendant)
    if Enabled and AutoFish then
        if Descendant.Name == 'button' and Descendant.Parent.Name == 'safezone' then
            task.wait(waittime)
            local buttonPosition = Descendant.AbsolutePosition
            local buttonSize = Descendant.AbsoluteSize
            local centerX = buttonPosition.X + buttonSize.X / 2
            local centerY = buttonPosition.Y + buttonSize.Y / 2

            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 0)

            task.wait(waittime)

        elseif Descendant.Name == 'playerbar' and Descendant.Parent.Name == 'bar' then
            local Finished = true
            Descendant:GetPropertyChangedSignal('Position'):Wait()
            ReplicatedStorage.events.reelfinished:FireServer(100, true)
            task.wait(3.2)
        end
    end
end)

LocalPlayer.PlayerGui.DescendantRemoving:Connect(function(Descendant)
    if Descendant.Name == 'reel' then
        task.wait(1)
        Finished = false
        Progress = false
    end
end)

coroutine.wrap(function()
    while true do
        if Enabled and AutoFish and not Progress then
            if Rod then
                Progress = true

                task.wait(1)

                Rod.events.reset:FireServer()
                Rod.events.cast:FireServer(100.5)

                task.wait(1)
            end
        end

        task.wait()
    end
end)()

local NewRod = LocalPlayer.Character:FindFirstChildWhichIsA('Tool')

if NewRod and NewRod.Name:lower():find('rod') then
    Rod = NewRod
end

if not UserInputService.KeyboardEnabled then
    ContextActionService:BindAction('ToggleFarm', ToggleFarm, false, Keybind, Enum.UserInputType.Touch)
    ContextActionService:SetTitle('ToggleFarm', 'Toggle Farm')
    ContextActionService:SetPosition('ToggleFarm', UDim2.new(0.9, -50, 0.9, -150))
else
    ContextActionService:BindAction('ToggleFarm', ToggleFarm, false, Keybind)
end

-- // // // Miscellaneous // // // --

local followPlatform = Instance.new("Part")
followPlatform.Size = Vector3.new(10, 2, 10)
followPlatform.Anchored = true
followPlatform.CanCollide = true
followPlatform.Material = Enum.Material.ForceField
followPlatform.Parent = game.Workspace

local platform = Instance.new("Part")
platform.Size = Vector3.new(20, 1, 20)
platform.Position = Vector3.new(-1996, 79107, -1057)
platform.Anchored = true
platform.BrickColor = BrickColor.new("Bright blue")
platform.Material = Enum.Material.ForceField
platform.Parent = game.Workspace

local function teleportToPlatform(player)
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = CFrame.new(platform.Position + Vector3.new(0, 3, 0))
        end
    end
end

-- // Hide Identity // --

local savedState = {}

function SaveCurrentState()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    savedState.accessories = {}
    for _, accessory in ipairs(character:GetChildren()) do
        if accessory:IsA("Accessory") then
            table.insert(savedState.accessories, accessory:Clone())
        end
    end

    savedState.shirt = character:FindFirstChildOfClass("Shirt") and character:FindFirstChildOfClass("Shirt"):Clone()
    savedState.pants = character:FindFirstChildOfClass("Pants") and character:FindFirstChildOfClass("Pants"):Clone()
end

function CustomizeAvatar(desiredColor)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    SaveCurrentState()

    for _, accessory in ipairs(character:GetChildren()) do
        if accessory:IsA("Accessory") then
            accessory:Destroy()
        end
    end

    for _, clothing in ipairs(character:GetChildren()) do
        if clothing:IsA("Shirt") or clothing:IsA("Pants") then
            clothing:Destroy()
        end
    end

    local bodyParts = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}

    for _, partName in ipairs(bodyParts) do
        local bodyPart = character:FindFirstChild(partName)
        if bodyPart then
            bodyPart.BrickColor = BrickColor.new(desiredColor)
        end
    end
end

ShowNotification("CER3 Has Successfully Loaded.")
