local Players = game:GetService('Players')
local CoreGui = game:GetService('StarterGui')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local ContextActionService = game:GetService('ContextActionService')
local VirtualInputManager = game:GetService('VirtualInputManager')
local TweenService = game:GetService("TweenService")

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MidnightHubFishing"
ScreenGui.Parent = game:GetService("CoreGui")

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 250, 0, 300)
MainFrame.Position = UDim2.new(0.5, -125, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Make draggable
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Title
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "Title"
TitleLabel.Size = UDim2.new(1, 0, 0, 30)
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleLabel.BorderSizePixel = 0
TitleLabel.Text = "Midnight Hub | Revive"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextSize = 18
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Parent = MainFrame

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "Status"
StatusLabel.Size = UDim2.new(1, -20, 0, 25)
StatusLabel.Position = UDim2.new(0, 10, 0, 40)
StatusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
StatusLabel.BorderSizePixel = 0
StatusLabel.Text = "Status: Inactive"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 14
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Parent = MainFrame

-- Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(1, -20, 0, 35)
ToggleButton.Position = UDim2.new(0, 10, 0, 75)
ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ToggleButton.BorderSizePixel = 0
ToggleButton.Text = "Start Fishing"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 14
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Parent = MainFrame

-- Stats Frame
local StatsFrame = Instance.new("Frame")
StatsFrame.Name = "StatsFrame"
StatsFrame.Size = UDim2.new(1, -20, 0, 150)
StatsFrame.Position = UDim2.new(0, 10, 0, 120)
StatsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
StatsFrame.BorderSizePixel = 0
StatsFrame.Parent = MainFrame

-- Stats Labels
local function createStatLabel(text, yPos)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 25)
    label.Position = UDim2.new(0, 5, 0, yPos)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = StatsFrame
    return label
end

local CastsLabel = createStatLabel("Total Casts: 0", 10)
local CatchesLabel = createStatLabel("Successful Catches: 0", 40)
local TimeLabel = createStatLabel("Time Running: 00:00:00", 70)
local RodLabel = createStatLabel("Current Rod: None", 100)

-- Variables
local LocalPlayer = Players.LocalPlayer
local Enabled = false
local Rod = false
local Progress = false
local Finished = false
local Stats = {
    casts = 0,
    catches = 0,
    startTime = 0
}

-- Update Stats
local function updateStats()
    CastsLabel.Text = "Total Casts: " .. Stats.casts
    CatchesLabel.Text = "Successful Catches: " .. Stats.catches
    if Stats.startTime > 0 then
        local elapsed = os.time() - Stats.startTime
        local hours = math.floor(elapsed / 3600)
        local minutes = math.floor((elapsed % 3600) / 60)
        local seconds = elapsed % 60
        TimeLabel.Text = string.format("Time Running: %02d:%02d:%02d", hours, minutes, seconds)
    end
end

-- Toggle Function
local function toggleFishing()
    Enabled = not Enabled
    if Enabled then
        ToggleButton.Text = "Stop Fishing"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        StatusLabel.Text = "Status: Active"
        Stats.startTime = os.time()
    else
        ToggleButton.Text = "Start Fishing"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        StatusLabel.Text = "Status: Inactive"
        if Rod then
            Rod.events.reset:FireServer()
        end
    end
end

ToggleButton.MouseButton1Click:Connect(toggleFishing)

-- Rod Detection
LocalPlayer.Character.ChildAdded:Connect(function(Child)
    if Child:IsA('Tool') and Child.Name:lower():find('rod') then
        Rod = Child
        RodLabel.Text = "Current Rod: " .. Child.Name
    end
end)

LocalPlayer.Character.ChildRemoved:Connect(function(Child)
    if Child == Rod then
        Rod = nil
        RodLabel.Text = "Current Rod: None"
        if Enabled then
            toggleFishing()
        end
    end
end)

-- Fishing Logic
LocalPlayer.PlayerGui.DescendantAdded:Connect(function(Descendant)
    if Descendant.Name == 'button' and Descendant.Parent.Name == 'safezone' then
        task.wait(0.1)
        local ButtonPosition = Descendant.AbsolutePosition
        local ButtonSize = Descendant.AbsoluteSize
        
        VirtualInputManager:SendMouseButtonEvent(
            ButtonPosition.X + (ButtonSize.X / 2),
            ButtonPosition.Y + (ButtonSize.Y / 2),
            Enum.UserInputType.MouseButton1,
            true,
            LocalPlayer.PlayerGui,
            1
        )
        VirtualInputManager:SendMouseButtonEvent(
            ButtonPosition.X + (ButtonSize.X / 2),
            ButtonPosition.Y + (ButtonSize.Y / 2),
            Enum.UserInputType.MouseButton1,
            false,
            LocalPlayer.PlayerGui,
            1
        )
    elseif Descendant.Name == 'playerbar' and Descendant.Parent.Name == 'bar' then
        Finished = true
        Descendant:GetPropertyChangedSignal('Position'):Wait()
        ReplicatedStorage.events.reelfinished:FireServer(100, true)
        Stats.catches = Stats.catches + 1
        updateStats()
    end
end)

LocalPlayer.PlayerGui.DescendantRemoving:Connect(function(Descendant)
    if Descendant.Name == 'reel' then
        Finished = false
        Progress = false
    end
end)

-- Main Loop
coroutine.wrap(function()
    while true do
        if Enabled and not Progress then
            if Rod then
                Progress = true
                task.wait(0.5)
                Rod.events.reset:FireServer()
                Rod.events.cast:FireServer(100.5)
                Stats.casts = Stats.casts + 1
                updateStats()
            end
        end
        task.wait()
    end
end)()

-- Stats Update Loop
coroutine.wrap(function()
    while true do
        if Enabled then
            updateStats()
        end
        task.wait(1)
    end
end)()

-- Initial rod check
local NewRod = LocalPlayer.Character:FindFirstChildWhichIsA('Tool')
if NewRod and NewRod.Name:lower():find('rod') then
    Rod = NewRod
    RodLabel.Text = "Current Rod: " .. NewRod.Name
end
