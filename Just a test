local FischAPI = {}

local VIM = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGUI = LocalPlayer:FindFirstChildOfClass("PlayerGui")
local LocalCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = LocalCharacter:FindFirstChild("HumanoidRootPart")

local Options = {
    AutoShake = false,
    AutoReel = false,
    AutoCast = false,
    AutoCastMode = "Legit",
    AutoCastDelay = 2,
    ZoneCast = false,
    SelectedZone = nil,
    WebhookURL = "",
    WebhookNotifications = false,
    AutoShakeMethod = "ClickEvent",
    AutoShakeDelay = 1,
}

local Internal = {
    FishingRods = {}, -- Store detected fishing rods
    ZoneConnection = nil,
}

local FischUser = {}

local NEVERLOSE = loadstring(game:HttpGet("https://raw.githubusercontent.com/IayZBoy/TrollScripts/main/randomuilib.lua"))()
local Notification = NEVERLOSE.Notification()
NEVERLOSE:Theme("dark")

-- UI Setup
local Windows = NEVERLOSE:AddWindow("Fishing Hub", "Fishing Script - Modified")
local MainTab = Windows:AddTab("Main", "earth")
local MechanicsSection = MainTab:AddSection("Mechanics", "left")

-- Scan for all available rods
function FischUser.ScanForRods()
    Internal.FishingRods = {}

    for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
        if item:IsA("Tool") and item:FindFirstChild("events") and item.events:FindFirstChild("cast") then
            Internal.FishingRods[item.Name] = item
        end
    end
end

-- Auto Cast
MainTab:AddToggle("Auto Cast", false, function(Value)
    Options.AutoCast = Value
    if Value then
        FischUser.StartAutoCast()
    else
        FischUser.StopAutoCast()
    end
end)

MainTab:AddDropdown("Auto Cast Mode", {"Legit", "Rage"}, "Legit", function(Selected)
    Options.AutoCastMode = Selected
end)

MainTab:AddSlider("Auto Cast Cooldown", 1, 10, 2, function(Value)
    Options.AutoCastDelay = Value
end)

function FischUser.StartAutoCast()
    FischUser.ScanForRods()
    task.spawn(function()
        while Options.AutoCast do
            local Rod = LocalCharacter:FindFirstChildOfClass("Tool")
            if Rod and Rod:FindFirstChild("events"):FindFirstChild("cast") then
                task.wait(Options.AutoCastDelay)
                if Options.AutoCastMode == "Legit" then
                    VIM:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                    task.wait(0.1)
                    VIM:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                elseif Options.AutoCastMode == "Rage" then
                    Rod.events.cast:FireServer(100)
                end
            end
            task.wait()
        end
    end)
end

function FischUser.StopAutoCast()
    -- Stops Auto Cast Loop
end

-- Zone Cast
MainTab:AddToggle("Zone Cast", false, function(Value)
    Options.ZoneCast = Value
end)

MainTab:AddDropdown("Select Fishing Zone", {"Zone1", "Zone2", "Zone3"}, "Zone1", function(Selected)
    Options.SelectedZone = Selected
end)

-- Auto Reel
MainTab:AddToggle("Auto Reel", false, function(Value)
    Options.AutoReel = Value
    task.spawn(function()
        while Options.AutoReel do
            task.wait(Options.AutoCastDelay)
            ReplicatedStorage.events.reelfinished:FireServer(100, false)
        end
    end)
end)

MainTab:AddSlider("Auto Reel Cooldown", 0, 10, 1, function(Value)
    Options.AutoCastDelay = Value
end)

-- Auto Shake
MainTab:AddToggle("Auto Shake", false, function(Value)
    Options.AutoShake = Value
end)

MainTab:AddDropdown("Auto Shake Mode", {"ClickEvent", "KeyCodeEvent"}, "ClickEvent", function(Selected)
    Options.AutoShakeMethod = Selected
end)

MainTab:AddSlider("Auto Shake Cooldown", 0, 10, 1, function(Value)
    Options.AutoShakeDelay = Value
end)

-- Rod Selection Dropdown
local rodNames = {}
for rod, _ in pairs(Internal.FishingRods) do
    table.insert(rodNames, rod)
end

local RodSelector = MainTab:AddSection("Rod Selection", "right")

RodSelector:AddDropdown("Select Rod", rodNames, rodNames[1] or "", function(selected)
    CalibrationData.ActiveFishingRod = selected
    Notification:Notify("info", "Rod Selection", "Selected rod: " .. selected, 3)
end)

RodSelector:AddButton("Equip Selected Rod", function()
    if CalibrationData.ActiveFishingRod then
        FischUser.EquipRod(CalibrationData.ActiveFishingRod)
    else
        Notification:Notify("warning", "No Rod Selected", "Please select a rod first", 3)
    end
end)

-- Equip Rod
function FischUser.EquipRod(rodName)
    if Internal.FishingRods[rodName] then
        local player = Players.LocalPlayer
        local rod = player.Backpack:FindFirstChild(rodName)
        if rod then
            rod.Parent = player.Character
            CalibrationData.FishingRod = rodName
            Notification:Notify("info", "Rod Equipped", "Successfully equipped " .. rodName, 3)
        else
            Notification:Notify("warning", "Rod Not Found", "Could not find " .. rodName .. " in backpack", 3)
        end
    end
end

-- Initialize script
Notification:Notify("info", "Fishing Script Loaded", "Ready to fish!", 5)

return FischAPI
